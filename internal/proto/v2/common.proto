// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package s2a.proto.v2;

option go_package = "github.com/google/s2a/internal/proto/v2/common_go_proto";

// The ciphersuites for the TLS handshake supported by S2A. Note that handshake
// ciphersuites are NOT configurable in TLS 1.3.
enum HandshakeCiphersuite {
  HANDSHAKE_CIPHERSUITE_UNSPECIFIED = 0;
  HANDSHAKE_CIPHERSUITE_ECDHE = 1;
}

// The ciphersuites for the record protocol supported by S2A. The name
// determines the confidentiality, and authentication ciphers as well as the
// hash algorithm used for PRF in TLS 1.2 or HKDF in TLS 1.3. Thus, the
// components of the name are:
//  - AEAD -- for encryption and authentication, e.g., AES_128_GCM.
//  - Hash algorithm -- used in PRF or HKDF, e.g., SHA256.
enum RecordCiphersuite {
  RECORD_CIPHERSUITE_UNSPECIFIED = 0;
  RECORD_CIPHERSUITE_AES_128_GCM_SHA256 = 1;
  RECORD_CIPHERSUITE_AES_256_GCM_SHA384 = 2;
  RECORD_CIPHERSUITE_CHACHA20_POLY1305_SHA256 = 3;
}

// The TLS versions supported by S2A's handshaker module.
enum TLSVersion {
  TLS_VERSION_UNSPECIFIED = 0;
  TLS_VERSION_1_0 = 1;
  TLS_VERSION_1_1 = 2;
  TLS_VERSION_1_2 = 3;
  TLS_VERSION_1_3 = 4;
}

// The side in the TLS connection.
enum ConnectionSide {
  CONNECTION_SIDE_UNSPECIFIED = 0;
  CONNECTION_SIDE_CLIENT = 1;
  CONNECTION_SIDE_SERVER = 2;
}

